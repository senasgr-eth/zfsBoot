name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -z "$PREV_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Save to file
          echo "$CHANGELOG" > CHANGELOG.txt
          
          # Set output
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## NSBoot ${{ github.ref_name }}
            
            ### What's Changed
            ${{ steps.changelog.outputs.changelog }}
            
            ### Installation
            
            **Docker:**
            ```bash
            docker pull nsboot/nsboot:${{ github.ref_name }}
            docker run -d -p 80:80 nsboot/nsboot:${{ github.ref_name }}
            ```
            
            **Kubernetes:**
            ```bash
            helm install nsboot oci://ghcr.io/nsboot/helm/nsboot --version ${{ github.ref_name }}
            ```
            
            **Docker Compose:**
            ```bash
            wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/docker-compose.yml
            docker-compose up -d
            ```
            
            ### Documentation
            - [Installation Guide](https://github.com/${{ github.repository }}/blob/main/INSTALL.md)
            - [Quick Start](https://github.com/${{ github.repository }}/blob/main/GETTING_STARTED.md)
            - [Full Documentation](https://nsboot.github.io)
            
            ### Checksums
            See assets below for SHA256 checksums.
          files: |
            docker-compose.yml
            DEPLOYMENT.md
            INSTALL.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build-artifacts:
    name: Build Release Artifacts
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create release archive
        run: |
          # Create source archive
          tar czf nsboot-${{ github.ref_name }}-source.tar.gz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='frontend/dist' \
            .
          
          # Create Helm chart archive
          tar czf nsboot-helm-${{ github.ref_name }}.tar.gz helm/nsboot
          
          # Generate checksums
          sha256sum nsboot-*.tar.gz > checksums.txt
      
      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            nsboot-${{ github.ref_name }}-source.tar.gz
            nsboot-helm-${{ github.ref_name }}.tar.gz
            checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-helm:
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      
      - name: Package Helm chart
        run: |
          cd helm
          helm package nsboot
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push Helm chart
        run: |
          cd helm
          helm push nsboot-*.tgz oci://ghcr.io/${{ github.repository_owner }}/helm
